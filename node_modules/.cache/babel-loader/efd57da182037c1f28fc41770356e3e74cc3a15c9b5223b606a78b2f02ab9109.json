{"ast":null,"code":"export const usePreventLeave = callback => {\n  const Listener = e => {\n    console.log(e);\n    e.preventDefault();\n    e.returnValue = \"\";\n    if (typeof callback === \"function\") {\n      callback();\n    }\n  };\n  const protect = () => {\n    window.addEventListener(\"beforeunload\", Listener);\n  };\n  const unprotect = () => {\n    window.removeEventListener(\"beforeunload\", Listener);\n  };\n  return {\n    protect,\n    unprotect\n  };\n};","map":{"version":3,"names":["usePreventLeave","callback","Listener","e","console","log","preventDefault","returnValue","protect","window","addEventListener","unprotect","removeEventListener"],"sources":["D:/Project-Repository/React/hooks/src/hooks/usePreventLeave.js"],"sourcesContent":["export const usePreventLeave = (callback) => {\r\n  const Listener = (e) => {\r\n    console.log(e);\r\n    e.preventDefault();\r\n    e.returnValue = \"\";\r\n    if (typeof callback === \"function\") {\r\n      callback();\r\n    }\r\n  };\r\n  const protect = () => {\r\n    window.addEventListener(\"beforeunload\", Listener);\r\n  };\r\n  const unprotect = () => {\r\n    window.removeEventListener(\"beforeunload\", Listener);\r\n  };\r\n\r\n  return { protect, unprotect };\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAIC,QAAQ,IAAK;EAC3C,MAAMC,QAAQ,GAAIC,CAAC,IAAK;IACtBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACdA,CAAC,CAACG,cAAc,CAAC,CAAC;IAClBH,CAAC,CAACI,WAAW,GAAG,EAAE;IAClB,IAAI,OAAON,QAAQ,KAAK,UAAU,EAAE;MAClCA,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC;EACD,MAAMO,OAAO,GAAGA,CAAA,KAAM;IACpBC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAER,QAAQ,CAAC;EACnD,CAAC;EACD,MAAMS,SAAS,GAAGA,CAAA,KAAM;IACtBF,MAAM,CAACG,mBAAmB,CAAC,cAAc,EAAEV,QAAQ,CAAC;EACtD,CAAC;EAED,OAAO;IAAEM,OAAO;IAAEG;EAAU,CAAC;AAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}